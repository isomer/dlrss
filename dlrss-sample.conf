# Path to the history file
# When files are successfully downloaded from a url, the url is added to this
# list so the file isn't downloaded twice. 
DL_HISTORY="/var/run/dlrss.history"

# Limit individual downloads to LIMIT_RATE KBps.
# This is to stop flooding your connection.  Set to None if you don't want
# a ratelimit
LIMIT_RATE=3000/8 # 3MBit

# Where to download files to
DL_DIR="/incoming/"

# Max time
# Maximum amount of time (in seconds) we will run before we exit.  Setting this
# to 0 will cause the program to run until it completes.  If, after downloading
# a file this time has been exceeded, the program will terminate.  This gives
# other people a chance, and creates breathing room.  
# This will never stop during a single file download.
# Set to 0 to run for as long as it takes to downlaod all files.
MAX_TIME = 10*60

# Minimum age of a file in seconds in the rss feed before we will download,
# this is to protect against files that are still in the process of being
# uploaded.
MIN_ITEM_AGE = 600

FILTERS = [
		r"-.*mini.*$",
		r"+.*debian.*\.iso$",
]


# The list of things to downlaod
FEEDS = [
# There can be multiple blocks
# Fetch from global first to try and use local bandwidth if available
{
	# The RSS Feed to download from (Mandatory)
	"feed" : "https://example.org/latest.rss",
	# The authnetication parameters (Optional)
	"auth_realm": "Authorization Required",
	"auth_base": "https://example.org/",
	"auth_user": "example",
	"auth_passwd": "example",
	# List of regexes of files to download.
	# prefixing a regex with "-" means it won't be downloaded
	# prefixing a regex with "+" means it will be downloaded
	# rules are applied in order (ie, earlier rules override later rules)
	"filters": FILTERS,
	# Optional script to run after successful download
	# %(url)s expands to the original url
	# %(localfile)s expands to the local fully qualified filename
	# %(localbasename)s expands to just the base name
	# %(localpath)s expands to just the destination directory
	# all names are quoted for the shell
	# Not implemneted yet.
	"script" : "mv %(localfile)s /complete",
},
# End of list
]
